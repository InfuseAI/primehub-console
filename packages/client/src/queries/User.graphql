#import './fragments/GroupInfo.graphql'
query CurrentUser {
  me {
    id
    username
    isAdmin
    enableInviteUsers
    groups {
      ...GroupInfoWithoutUsers
      instanceTypes {
        id
        name
        displayName
        description
        spec
        global
        gpuLimit
        memoryLimit
        cpuLimit
      }
      images {
        id
        name
        displayName
        description
        groupName
        isReady
        url
        urlForGpu
        useImagePullSecret
        spec
        global
        type
        usage
      }
    }
  }
}

query User($where: UserWhereUniqueInput!) {
  user(where: $where) {
    id
    username
    email
    firstName
    lastName
    enabled
    totp
    isAdmin
    volumeCapacity
    enableInviteUsers
    groups {
      id
      name
      displayName
      quotaCpu
      quotaGpu
    }
  }
}

query UsersConnection($userAfter: String, $userBefore: String, $userLast: Int,$userFirst: Int, $where: UserWhereInput, $userOrderBy: UsersOrderBy) {
  users: usersConnection(after: $userAfter, before: $userBefore, last: $userLast, first: $userFirst,where: $where, userOrderBy: $userOrderBy) {
    edges {
      cursor
      node {
        id
        username
        email
        firstName
        lastName
        enabled
        totp
        isAdmin
      }
    }
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
  }
}

query UserGroups($page: Int, $where: GroupWhereInput, $orderBy: GroupOrderByInput) {
  groups: groupsConnection(page: $page, where: $where, orderBy: $orderBy) {
    edges {
      cursor
      node {
        id
        name
        displayName
        quotaCpu
        quotaGpu
      }
    }
    pageInfo {
      currentPage
      totalPage
    }
  }
}


mutation UpdateUser($payload: UserUpdateInput!, $where: UserWhereUniqueInput!) {
  updateUser(data: $payload, where: $where) {
    id
    username
  }
}

mutation DeleteUser($where: UserWhereUniqueInput!) {
  deleteUser(where: $where) {
    id
    username
  }
}

mutation CreateUser($payload: UserCreateInput!) {
  createUser(data: $payload) {
    id
    username
  }
}

mutation CreateInvitation($data: InvitationCreateInput!) {
  createInvitation(data: $data){
    invitationToken
  }
}
